一、什么是设计模式
设计模式是一套被反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设 计模式是为了重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己 于他人于系统都是多赢的，设计模式使代码编制真正工程化，设计模式是软件工程的基石，如同大厦的一块块砖石一样。
        项目中合理地运用设计模式可以完美地解决很多问题，每种模式在现实 中都有相应的原理来与之对应，每种模式都描述了一个在我们周围不断重复发生的问题，以及该 问题的核心解决方案，这也是设计模式能被广泛应用的原因。

二、设计模式的类型
总共有 23 种设计模式 ， 可以分为三大类 ： 创建型模式 ， 结构型模式 ， 行为型模式 。（按照以下顺序分别给出案例mode~mode23）

        1、创建型模式
                单例模式：某个类只能有一个实例，提供一个全局的访问点。     (mode1）

                工厂模式：一个工厂类根据传入的参数决定创建出那一种产品类的实例。     (mode2） 

                抽象工厂：创建相关或依赖对象的家族，而无需明确指定具体类。     (mode3）

                建造者模式：封装一个复杂对象的构建过程，并可以按步骤构造。     (mode4）

                原型模式：通过复制现有的实例来创建新的实例。     (mode5）

        2、结构型模式
                适配器模式：将一个类的方法接口转换成客户希望的另外一个接口。     (mode6）

                组合模式：将对象组合成树形结构以表示“”部分-整体“”的层次结构。     (mode7）

                装饰模式：动态的给对象添加新的功能。     (mode8）

                代理模式：为其他对象提供一个代理以便控制这个对象的访问。     (mode9）

                亨元模式：通过共享技术来有效的支持大量细粒度的对象。     (mode10）

                外观模式：对外提供一个统一的方法，来访问子系统中的一群接口。     (mode11）

                桥接模式：将抽象部分和它的实现部分分离，使它们都可以独立的变化。     (mode12）

        3、行为型模式
                模板模式：定义一个算法结构，而将一些步骤延迟到子类实现。     (mode13）

                解释器模式：给定一个语言，定义它的文法的一种表示，并定义一个解释器。     (mode14）

                策略模式：定义一系列算法，把他们封装起来，并且使它们可以相互替换。     (mode15）

                状态模式：允许一个对象在其对象内部状态改变时改变它的行为。     (mode16）

                观察者模式：对象间的一对多的依赖关系。     (mode17）

                备忘录模式：在不破坏封装的前提下，保持对象的内部状态。     (mode18）

                中介者模式：用一个中介对象来封装一系列的对象交互。     (mode19）

                命令模式：将命令请求封装为一个对象，使得可以用不同的请求来进行参数化。     (mode20）

                访问者模式：在不改变数据结构的前提下，增加作用于一组对象元素的新功能。     (mode21）

                责任链模式：将请求的发送者和接收者解耦，使的多个对象都有处理这个请求的机会。     (mode22）

                迭代器模式：一种遍历访问聚合对象中各个元素的方法，不暴露该对象的内部结构。     (mode23）
